#include<stdio.h>
void sparsetrip(int row, int col, int a[10][10], int b[10][10]) 
{
	int i,j,k=1;
	for (i=0;i<row;i++) 
    {
		for (j=0;j<col;j++) 
        {
			if (a[i][j]!=0) 
            {
				b[k][0]=i;
				b[k][1]=j;
				b[k][2]=a[i][j];
				k++;
			}
		}
	}
	b[0][0]=row;
	b[0][1]=col;
	b[0][2]=k-1;
}
void ptrip(int b[10][10]) 
{
	int i, j;
	for (i=0;i<=b[0][2];i++) 
    {
		for (j=0;j<3;j++) 
        {
			printf("%d\t",b[i][j]);
		}
		printf("\n");
	}
}

void prntsparse(int row, int col, int a[10][10]) 
{
	int i, j;
	for(i=0;i<row;i++) 
    {
		for (j=0;j<col;j++) 
        {
			printf("%d\t",a[i][j]);
		}
		printf("\n");
	}
}

void transtrip(int b[10][10], int t[10][10]) 
{
    int i,j,k=1;
    int n=b[0][2];
    t[0][0]=b[0][1]; 
    t[0][1]=b[0][0]; 
    t[0][2]=n;       
    for (i=0;i<b[0][1];i++) 
    {
        for (j=1;j<=n;j++) 
        {
            if (b[j][1]==i) 
            
            {
                t[k][0]=b[j][1]; 
                t[k][1]=b[j][0]; 
                t[k][2]=b[j][2]; 
                k++;
            }
        }
    }
}

void tripspa(int t[10][10], int a[10][10]) 
{
    int i, j, row=t[0][0], col=t[0][1];
    for(i=0;i<row;i++) 
    {
        for(j=0;j<col;j++) 
        {
            a[i][j]=0;
        }
    }
    for (i=1;i<=t[0][2];i++) 
    {
        a[t[i][0]][t[i][1]]=t[i][2];
    }
}

int main() 
{
	int a[10][10]={{0, 0, 2, 0, 1},
		        {45, 0, 0, 2, 0},
		        {1, 0, 0, 5, 3},
		        {23, 5, 0, 0, 0}};
	int row = 4, col = 5, b[10][10], t[10][10], trans_sparse[10][10];
    printf("Sparse Matrix:\n");
	prntsparse(row, col, a);
    printf("\nTriplet Representation:\n");
	sparsetrip(row, col, a, b);
	ptrip(b);
    printf("\nTranspose in Triplet Form:\n");
	transtrip(b, t);
	ptrip(t);
	tripspa(t, trans_sparse);
	printf("\nTranspose in Sparse Matrix Form:\n");
	prntsparse(t[0][0], t[0][1], trans_sparse);
    return 0;
}
